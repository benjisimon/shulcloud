#!/bin/bash

##
## Script to automate stuff within shulcloud
##

if [ -f "$HOME/.shulcloudassistrc" ] ; then
  . $HOME/.shulcloudassistrc
elif [ -f "$HOME/.config/shulcloudassist" ] ; then
  . $HOME/.config/shulcloudassist
else
  echo "No config file found. Giving up."
  exit 2
fi

COOKIE_JAR=$HOME/.shulcloudassist.cookies
DOC_SNAPSHOT=$HOME/.shulcloudassist.last
delim="|"

case $(uname) in
  Darwin)
    DATE=gdate
    ;;
  *)
    DATE=date
    ;;
esac

usage() {
  echo "Usage: $(basename $0) -a yz [-w <week-offset>]"
  echo "Usage: $(basename $0) -a forms [ -d <delim> ]"
  exit 1
}


login() {
  refresh=yes
  if [ -f "$COOKIE_JAR" ] ; then
    last_modified=$(stat -f %m $COOKIE_JAR)
    now=$(date +%s)
    diff=$(($now - $last_modified))
    if [ $diff -lt 1200 ] ; then
      refresh=no
    fi
  fi

  if [ "$refresh" = "yes" ] ; then
    sccsrf=$(curl -s -c $COOKIE_JAR $BASE/  | grep sccsrf | sed -e 's/^.*value="//' -e 's/".*//')
    curl -d action=login \
         -d redirect=$BASE \
         -d sccsrf=$sccsrf \
         -d "email=$USER" \
         -d "password=$PASSWORD" \
         -c $COOKIE_JAR -b $COOKIE_JAR \
         -s -i $BASE/login.php > /dev/null
  fi
}

while getopts ":a:w:d:h" o; do
  case "${o}" in
    a)
      action=$OPTARG
      ;;
    w)
      week=$OPTARG
      ;;
    d)
      delim=$OPTARG
      ;;
    * | h)
      usage
      ;;
  esac
done

case "$action" in
  yz)
    if [ -z "$week" ] ; then
      week=0
    fi
    shift=$(($week * 7))

    sow=$(($($DATE +%u) + 1 - $shift))
    eow=$((6 - $sow))
    start=$($DATE -d "$sow days ago" +%Y-%m-%d )
    end=$($DATE -d "$eow days" +%Y-%m-%d )
    start_fmt=$($DATE -d "$start" +%m/%d/%Y)
    end_fmt=$($DATE -d "$end" +%m/%d/%Y)
    now=$($DATE -d 00:00 +%s)
    
    login
    
    curl -s -G \
         -d order=next_date \
         -d order_asc=1 \
         -d search= \
         -d is_active= \
         -d search_mourners= \
         -d gender= \
         -d setPerPage=100 \
         -d start_date=$start \
         -d text_start_date=$start_fmt \
         -d last_start_date=$end \
         -d end_date=$end \
         -d text_end_date=$end \
         -d last_end_date=$end_fmt \
         -d has_plot= \
         -d has_plaque= \
         -d has_relatives=Y \
         -d action=export \
         -b $COOKIE_JAR -c $COOKIE_JAR \
         $BASE/admin/yahrzeits.php | \
      sed '1d' | 
      while read line ; do
        d_fname=$(echo $line | csvcut -c 3)
        d_lname=$(echo $line | csvcut -c 4)
        mourner=$(echo $line | csvcut -c 22 | tr -d '"')
        observed=$(echo $line | csvcut -c 10)
        offset=$(($(($($DATE -d "$observed" +%s) - $now)) / 86400))
        date=$($DATE -d "$observed" +"%a %b %d")
        echo "$date (${offset}d) $mourner: $d_fname $d_lname"
      done
    
    ;;

  forms)
    login
    curl -s -G \
         -b $COOKIE_JAR -c $COOKIE_JAR \
         -d query= \
         -d archived=N \
         -d type= \
         -d setPerPage=300 \
         -d apply_filters=Update+Filter \
         $BASE/admin/forms.php > $DOC_SNAPSHOT
    
    rows=$(($(cat $DOC_SNAPSHOT | pup table.listing | grep '<tr ' | wc -l) + 1))

    i=2
    while [ $i -lt "$rows" ] ; do
      name=$(cat $DOC_SNAPSHOT | pup "table.listing tr:nth-child($i) td:nth-child(1) text{}")
      submissions=$(cat $DOC_SNAPSHOT | pup "table.listing tr:nth-child($i) td:nth-child(4) text{}" | sed 's/[^0-9]*//')
      id=$(cat $DOC_SNAPSHOT | pup "table.listing tr:nth-child($i) td:nth-child(5) a[href*=action=edit] attr{href}" | sed 's/.*id=//')
      echo "${id}${delim}$name${delim}$submissions"
      i=$(($i + 1))      
    done

    ;;
  
  *)
    usage
    ;;
esac
